# -*- coding: utf-8 -*-
"""Untitled48.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HQwxL4i3sZLwGRpbT0h1J3KkwMLvdmFF

**Sakshi Kharat**

**Oasis Infobyte (Data Science) - Task-4**

**Email Spam Detection using Machine Learning**

**About the Task- 4:
Spam mails or junk mails are sent to the massive number of users at the same time, frequently containing the spam messages, scams or most dangerously, phishing content.
This project will use Machine Learning to recognize and Classify Emails into Spam and non-spam**
"""

import pandas as pd

import matplotlib as plt

import numpy as np

"""**Data Collection**"""

from google.colab import files


uploaded = files.upload()

df = pd.read_csv('spam.csv', encoding='latin-1')

"""**Viewing the Dataset**

"""

df

"""**Displaying the Dataset**"""

df.info

"""**Dropping the null values**"""

df_cleaned = df.drop(["Unnamed: 2","Unnamed: 3","Unnamed: 4"], axis=1)

df_cleaned

"""**There are 5572 rows and 2 columns**

**Data Preprocessing**
"""

df_cleaned.columns

"""**There are total 2 columns in the Dataset**"""

df_cleaned.shape

df_cleaned.head(2)

"""**Displaying the first 2 entries of the Dataset**"""

df_cleaned.tail(2)

"""**Displaying the last 2 entries of the Dataset**

"""

df_cleaned.iloc[1]

"""**Preprocessing the Data**

Checking the Null Values
"""

df_cleaned.isnull()

df_cleaned.isnull().sum()

df_cleaned.isna().sum()

"""**Label Encoding**"""

df_cleaned.loc[df_cleaned['Category'] == 'spam', 'Category',] = 0
df_cleaned.loc[df_cleaned['Category'] == 'ham', 'Category',] = 1

df_cleaned.head(4)

"""**Splitting the data into to training data and test data**"""

from sklearn.model_selection import train_test_split

from sklearn.feature_extraction.text import CountVectorizer

"""**Using CountVectorizer class from scikit-learn to convert the text data into a bag-of-words representation.**"""

from sklearn.naive_bayes import MultinomialNB

from sklearn.metrics import accuracy_score

from sklearn import preprocessing

lab = preprocessing.LabelEncoder()

df_cleaned['Category'] = lab.fit_transform(df_cleaned['Category'])

"""**Droping the Duplicate Values**"""

df_cleaned.duplicated().sum()

"""**403 are the Duplicate Values**

"""

df_cleaned  = df_cleaned.drop_duplicates()

df_cleaned.duplicated().sum()

"""**Splitting the data**

"""

x = df_cleaned['Message']

y = df_cleaned['Category']

x_train, x_test, y_train, y_test =train_test_split(x,y, test_size=0.25, random_state=0)

"""**Feature Extraxtion - converting text into numerical values**"""

from sklearn.pipeline import Pipeline

clt=Pipeline([
    ('vectorizer',CountVectorizer()),
    ('nb',MultinomialNB())
])

"""**Training the model**"""

clt.fit(x_train,y_train)

Pipeline(steps=[('vectorizer', CountVectorizer()), ('nb', MultinomialNB())])

emails=[
    'Sounds great! Are you home now?',
    'Will u meet ur dream partner soon? Is ur career off 2 a flyng start? 2 find out free, txt HORO followed by ur star sign, e. g. HORO ARIES'
]

clt.predict(emails)

clt.score(x_test,y_test)

clt.score(x_train, y_train)

emails=[
    'I m gonna be home soon and i dont want to talk about this stuff anymore tonight, k? Ive cried enough today.',
    'WINNER!! As a valued network customer you have been selected to receivea å£900 prize reward! To claim call 09061701461. Claim code KL341. Valid 12 hours only.'
]

clt.predict(emails)

emails=[
    'Had your mobile 11 months or more? U R entitled to Update to the latest colour mobiles with camera for Free! Call The Mobile Update Co FREE on 08002986030',
    'SIX chances to win CASH! From 100 to 20,000 pounds txt> CSH11 and send to 87575. Cost 150p/day, 6days, 16+ TsandCs apply Reply HL 4 info'
]

clt.predict(emails)

"""**End of the Code**"""